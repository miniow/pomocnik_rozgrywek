<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:fa="http://schemas.awesome.incremented/wpf/xaml/fontawesome.sharp">
    <Style x:Key="menuButton" TargetType="RadioButton">
        <!--Normal button style-->
        <Setter Property="Height" Value="50"/>
        <Setter Property="Margin" Value="-5,0,0,5"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{StaticResource plainTextColor3}"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <Border Background="{TemplateBinding Background}"
                        BorderThickness="4,0,0,0"
                        BorderBrush="{TemplateBinding BorderBrush}">
                        <ContentPresenter HorizontalAlignment="Left" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Cursor" Value="Hand"/>
                <Setter Property="Margin" Value="0,0,0,5"/>
                <Setter Property="Background" Value="{StaticResource panelOverColor}"/>
                <Setter Property="Foreground" Value="{StaticResource titleColor3}"/>
                <Setter Property="BorderBrush" Value="{Binding Path=Tag, RelativeSource={RelativeSource Self}}"/>
            </Trigger>
            <!--Activated button style-->
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Margin" Value="0,0,0,5"/>
                <Setter Property="Background" Value="{StaticResource panelActiveColor}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--Menu button icon-->
    <Style x:Key="menuButtonIcon" TargetType="fa:IconImage">
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Width" Value="22"/>
        <Setter Property="Height" Value="22"/>
        <Setter Property="Margin" Value="35,0,20,0"/>
        <Style.Triggers>
            <!--Activated button icon style-->
            <DataTrigger Binding="{Binding IsChecked, RelativeSource={RelativeSource AncestorType=RadioButton}}" Value="True">
                <Setter Property="Foreground" Value="Black"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <!--Menu button text-->
    <Style x:Key="menuButtonText" TargetType="TextBlock">
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FontFamily" Value="Montserrat"/>
        <Setter Property="FontWeight" Value="Medium"/>
        <Setter Property="FontSize" Value="13.5"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Style.Triggers>
            <!--Activated button text style-->
            <DataTrigger Binding="{Binding IsChecked, RelativeSource={RelativeSource AncestorType=RadioButton}}" Value="True">
                <Setter Property="Foreground" Value="Black"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <!--control bar button-->
    <Style x:Key="controlButton" TargetType="Button">
        <!--Normal button style-->
        <Setter Property="Width" Value="35"/>
        <Setter Property="Background" Value="{StaticResource ButtonBackgroundColor}"/>
        <Setter Property="Foreground" Value="{StaticResource ButtonForegroundColor}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}"
                            CornerRadius="4">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource ButtonBackgroundColorHover}"/>
                <Setter Property="Foreground" Value="{Binding Path=Tag, RelativeSource={RelativeSource Self}}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--Icon bar button-->
    <Style x:Key="iconButton" TargetType="Button">
        <!--Normal button style-->
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Width" Value="25"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{StaticResource IconForegroundColor}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{Binding Path=Tag, RelativeSource={RelativeSource Self}}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--Menu button icon-->
    <Style x:Key="iconButtonIcon" TargetType="fa:IconImage">
        <Setter Property="Foreground" Value="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType=Button}}"/>
        <Setter Property="Width" Value="15"/>
        <Setter Property="Height" Value="15"/>
    </Style>
    <Style x:Key="controlButtonIcon" TargetType="fa:IconImage">
        <Setter Property="Foreground" Value="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType=Button}}"/>
        <Setter Property="Width" Value="9"/>
        <Setter Property="Height" Value="9"/>
    </Style>

    <Style x:Key="addButton"
           TargetType="Button">
        <Setter Property="Background"
                Value="{StaticResource ButtonBackgroundColor}" />
        <Setter Property="Foreground"
                Value="{StaticResource ButtonForegroundColor}" />
        <Setter Property="FocusVisualStyle"
                Value="{x:Null}" />
        <Setter Property="Width"
                Value="150" />
        <Setter Property="Height"
                Value="30" />
        <Setter Property="Cursor"
                Value="Hand" />
        <Setter Property="HorizontalAlignment"
                Value="Center" />
        <Setter Property="Margin"
                Value="0 0 30 0" />
        <Setter Property="FontSize"
                Value="13" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}"
                            CornerRadius="7">
                        <ContentPresenter HorizontalAlignment="Center"
                                          VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver"
                     Value="True">
                <Setter Property="Cursor"
                        Value="Hand" />
                <Setter Property="Background"
                        Value="{StaticResource ButtonBackgroundColorHover}" />
                <Setter Property="Foreground"
                        Value="{StaticResource ButtonBackgroundColorHover}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="addButtonIcon"
           TargetType="fa:IconImage">
        <Setter Property="Foreground"
                Value="{StaticResource IconForegroundColor}" />
        <Setter Property="Width"
                Value="15" />
        <Setter Property="Height"
                Value="15" />
    </Style>
    
    <Style x:Key="gridEditButton"
           TargetType="Button">
        <Setter Property="Background"
                Value="{StaticResource InfoColorBackground }" />
        <Setter Property="BorderBrush"
                Value="{StaticResource InfoColorBorder}" />
        <Setter Property="Foreground"
                Value="{StaticResource InfoColorText}" />
        <Setter Property="VerticalAlignment"
                Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}"
                            CornerRadius="5"
                            Padding="5"
                            BorderThickness="1"
                            BorderBrush="{TemplateBinding BorderBrush}">
                        <ContentPresenter HorizontalAlignment="Center"
                                          VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseDirectlyOver"
                     Value="True">
                <Setter Property="Background"
                        Value="{StaticResource ButtonBackgroundColor}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <Style x:Key="gridRemoveButton"
           TargetType="Button"
           BasedOn="{StaticResource gridEditButton}">
        <Setter Property="Background"
                Value="{StaticResource ErrorColorBackground}" />
        <Setter Property="BorderBrush"
                Value="{StaticResource ErrorColorBorder}" />
        <Setter Property="Foreground"
                Value="{StaticResource ErrorColorText}" />
        <Style.Triggers>
            <Trigger Property="IsMouseDirectlyOver"
                     Value="True">
                <Setter Property="Background"
                        Value="{StaticResource ButtonBackgroundColor}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <Style x:Key="gridButtonIcon"
           TargetType="fa:IconImage">
        <Setter Property="Width"
                Value="12" />
        <Setter Property="Height"
                Value="12" />
        <Setter Property="VerticalAlignment"
                Value="Center" />
    </Style>
</ResourceDictionary>